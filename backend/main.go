package main

import (
	"encoding/json"
	"net/http"
)

type Todo struct {
	Title       string `json:"title"`
	Description string `json:"description"`
}

var todos []Todo

func main() {
	http.HandleFunc("/", todoHandler)
	http.ListenAndServe(":8080", nil)
}

func enableCORS(w http.ResponseWriter, r *http.Request) { // This function was generated by ChatGPT to enable cross origin resource sharing
	w.Header().Set("Access-Control-Allow-Origin", "http://localhost:3000")
	w.Header().Set("Access-Control-Allow-Methods", "GET, POST, OPTIONS")
	w.Header().Set("Access-Control-Allow-Headers", "Content-Type")
	if r.Method == http.MethodOptions {
		w.WriteHeader(http.StatusOK)
	}
}

func todoHandler(w http.ResponseWriter, r *http.Request) {
	enableCORS(w, r)
	if r.Method == "GET" {
		handleGetTodos(w)
		return
	}
	if r.Method == "POST" {
		handleAddTodo(w, r)
		return
	}
}

func handleGetTodos(w http.ResponseWriter) {
	json.NewEncoder(w).Encode(todos)
}

func handleAddTodo(w http.ResponseWriter, r *http.Request) {
	var newTodo Todo
	json.NewDecoder(r.Body).Decode(&newTodo)
	todos = append(todos, newTodo)
	w.WriteHeader(http.StatusOK)
	json.NewEncoder(w).Encode(newTodo)
}
